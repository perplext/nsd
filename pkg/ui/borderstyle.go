package ui

import "sort"

// BorderStyle represents different border drawing styles
type BorderStyle int

const (
	BorderStyleSingle BorderStyle = iota
	BorderStyleDouble
	BorderStyleRounded
	BorderStyleBold
	BorderStyleDashed
	BorderStyleDotted
	BorderStyleClassic // ASCII style
	BorderStyleMinimal
	BorderStyleBBS     // Retro BBS style
	BorderStyleNone
)

// BorderChars defines the characters used for drawing borders
type BorderChars struct {
	TopLeft     rune
	TopRight    rune
	BottomLeft  rune
	BottomRight rune
	Horizontal  rune
	Vertical    rune
	Cross       rune
	HorizontalDown rune
	HorizontalUp   rune
	VerticalLeft   rune
	VerticalRight  rune
}

// BorderStyles maps style names to their character sets
var BorderStyles = map[string]BorderChars{
	"Single": {
		TopLeft:     '‚îå',
		TopRight:    '‚îê',
		BottomLeft:  '‚îî',
		BottomRight: '‚îò',
		Horizontal:  '‚îÄ',
		Vertical:    '‚îÇ',
		Cross:       '‚îº',
		HorizontalDown: '‚î¨',
		HorizontalUp:   '‚î¥',
		VerticalLeft:   '‚î§',
		VerticalRight:  '‚îú',
	},
	"Double": {
		TopLeft:     '‚ïî',
		TopRight:    '‚ïó',
		BottomLeft:  '‚ïö',
		BottomRight: '‚ïù',
		Horizontal:  '‚ïê',
		Vertical:    '‚ïë',
		Cross:       '‚ï¨',
		HorizontalDown: '‚ï¶',
		HorizontalUp:   '‚ï©',
		VerticalLeft:   '‚ï£',
		VerticalRight:  '‚ï†',
	},
	"Rounded": {
		TopLeft:     '‚ï≠',
		TopRight:    '‚ïÆ',
		BottomLeft:  '‚ï∞',
		BottomRight: '‚ïØ',
		Horizontal:  '‚îÄ',
		Vertical:    '‚îÇ',
		Cross:       '‚îº',
		HorizontalDown: '‚î¨',
		HorizontalUp:   '‚î¥',
		VerticalLeft:   '‚î§',
		VerticalRight:  '‚îú',
	},
	"Bold": {
		TopLeft:     '‚îè',
		TopRight:    '‚îì',
		BottomLeft:  '‚îó',
		BottomRight: '‚îõ',
		Horizontal:  '‚îÅ',
		Vertical:    '‚îÉ',
		Cross:       '‚ïã',
		HorizontalDown: '‚î≥',
		HorizontalUp:   '‚îª',
		VerticalLeft:   '‚î´',
		VerticalRight:  '‚î£',
	},
	"Dashed": {
		TopLeft:     '‚îå',
		TopRight:    '‚îê',
		BottomLeft:  '‚îî',
		BottomRight: '‚îò',
		Horizontal:  '‚ïå',
		Vertical:    '‚ïé',
		Cross:       '‚îº',
		HorizontalDown: '‚î¨',
		HorizontalUp:   '‚î¥',
		VerticalLeft:   '‚î§',
		VerticalRight:  '‚îú',
	},
	"Dotted": {
		TopLeft:     '‚°è',
		TopRight:    '‚¢π',
		BottomLeft:  '‚£á',
		BottomRight: '‚£∏',
		Horizontal:  '‚†â',
		Vertical:    '‚°á',
		Cross:       '‚°á',
		HorizontalDown: '‚†â',
		HorizontalUp:   '‚†â',
		VerticalLeft:   '‚°á',
		VerticalRight:  '‚°á',
	},
	"Classic": {
		TopLeft:     '+',
		TopRight:    '+',
		BottomLeft:  '+',
		BottomRight: '+',
		Horizontal:  '-',
		Vertical:    '|',
		Cross:       '+',
		HorizontalDown: '+',
		HorizontalUp:   '+',
		VerticalLeft:   '+',
		VerticalRight:  '+',
	},
	"Minimal": {
		TopLeft:     ' ',
		TopRight:    ' ',
		BottomLeft:  ' ',
		BottomRight: ' ',
		Horizontal:  ' ',
		Vertical:    ' ',
		Cross:       ' ',
		HorizontalDown: ' ',
		HorizontalUp:   ' ',
		VerticalLeft:   ' ',
		VerticalRight:  ' ',
	},
	"BBS": {
		TopLeft:     '‚ïì',
		TopRight:    '‚ïñ',
		BottomLeft:  '‚ïô',
		BottomRight: '‚ïú',
		Horizontal:  '‚îÄ',
		Vertical:    '‚ïë',
		Cross:       '‚ï´',
		HorizontalDown: '‚ï•',
		HorizontalUp:   '‚ï®',
		VerticalLeft:   '‚ï¢',
		VerticalRight:  '‚ïü',
	},
	"BlockShade": {
		TopLeft:     '‚ñõ',
		TopRight:    '‚ñú',
		BottomLeft:  '‚ñô',
		BottomRight: '‚ñü',
		Horizontal:  '‚ñÄ',
		Vertical:    '‚ñå',
		Cross:       '‚ñà',
		HorizontalDown: '‚ñÄ',
		HorizontalUp:   '‚ñÑ',
		VerticalLeft:   '‚ñê',
		VerticalRight:  '‚ñå',
	},
	"DoubleInside": {
		TopLeft:     '‚ïí',
		TopRight:    '‚ïï',
		BottomLeft:  '‚ïò',
		BottomRight: '‚ïõ',
		Horizontal:  '‚ïê',
		Vertical:    '‚îÇ',
		Cross:       '‚ï™',
		HorizontalDown: '‚ï§',
		HorizontalUp:   '‚ïß',
		VerticalLeft:   '‚ï°',
		VerticalRight:  '‚ïû',
	},
	"Stars": {
		TopLeft:     '‚ú¶',
		TopRight:    '‚ú¶',
		BottomLeft:  '‚ú¶',
		BottomRight: '‚ú¶',
		Horizontal:  '‚ïê',
		Vertical:    '‚ïë',
		Cross:       '‚ú¶',
		HorizontalDown: '‚ú¶',
		HorizontalUp:   '‚ú¶',
		VerticalLeft:   '‚ú¶',
		VerticalRight:  '‚ú¶',
	},
	"Hearts": {
		TopLeft:     '‚ô•',
		TopRight:    '‚ô•',
		BottomLeft:  '‚ô•',
		BottomRight: '‚ô•',
		Horizontal:  '‚îÄ',
		Vertical:    '‚îÇ',
		Cross:       '‚ô•',
		HorizontalDown: '‚ô•',
		HorizontalUp:   '‚ô•',
		VerticalLeft:   '‚ô•',
		VerticalRight:  '‚ô•',
	},
	"Arrows": {
		TopLeft:     '‚Üñ',
		TopRight:    '‚Üó',
		BottomLeft:  '‚Üô',
		BottomRight: '‚Üò',
		Horizontal:  '‚Üî',
		Vertical:    '‚Üï',
		Cross:       '‚úö',
		HorizontalDown: '‚Üì',
		HorizontalUp:   '‚Üë',
		VerticalLeft:   '‚Üê',
		VerticalRight:  '‚Üí',
	},
	"Fire": {
		TopLeft:     'üî•',
		TopRight:    'üî•',
		BottomLeft:  'üî•',
		BottomRight: 'üî•',
		Horizontal:  '‚ïê',
		Vertical:    '‚ïë',
		Cross:       'üî•',
		HorizontalDown: 'üî•',
		HorizontalUp:   'üî•',
		VerticalLeft:   'üî•',
		VerticalRight:  'üî•',
	},
	"Tech": {
		TopLeft:     '‚ö°',
		TopRight:    '‚ö°',
		BottomLeft:  '‚ö°',
		BottomRight: '‚ö°',
		Horizontal:  '‚îÅ',
		Vertical:    '‚îÉ',
		Cross:       '‚ö°',
		HorizontalDown: '‚ö°',
		HorizontalUp:   '‚ö°',
		VerticalLeft:   '‚ö°',
		VerticalRight:  '‚ö°',
	},
	"Matrix": {
		TopLeft:     '‚ó¢',
		TopRight:    '‚ó£',
		BottomLeft:  '‚ó•',
		BottomRight: '‚ó§',
		Horizontal:  '‚ñ¨',
		Vertical:    '‚ñÆ',
		Cross:       '‚óÜ',
		HorizontalDown: '‚ñº',
		HorizontalUp:   '‚ñ≤',
		VerticalLeft:   '‚óÄ',
		VerticalRight:  '‚ñ∂',
	},
	"Dots": {
		TopLeft:     '‚óè',
		TopRight:    '‚óè',
		BottomLeft:  '‚óè',
		BottomRight: '‚óè',
		Horizontal:  '¬∑',
		Vertical:    '¬¶',
		Cross:       '‚óè',
		HorizontalDown: '‚óè',
		HorizontalUp:   '‚óè',
		VerticalLeft:   '‚óè',
		VerticalRight:  '‚óè',
	},
	"Pipes": {
		TopLeft:     '‚ï±',
		TopRight:    '‚ï≤',
		BottomLeft:  '‚ï≤',
		BottomRight: '‚ï±',
		Horizontal:  '‚éØ',
		Vertical:    '‚é™',
		Cross:       '‚ï≥',
		HorizontalDown: '‚é¨',
		HorizontalUp:   '‚é´',
		VerticalLeft:   '‚é®',
		VerticalRight:  '‚é¨',
	},
	"Vintage": {
		TopLeft:     '‚óä',
		TopRight:    '‚óä',
		BottomLeft:  '‚óä',
		BottomRight: '‚óä',
		Horizontal:  '~',
		Vertical:    '¬¶',
		Cross:       '‚óä',
		HorizontalDown: '‚óä',
		HorizontalUp:   '‚óä',
		VerticalLeft:   '‚óä',
		VerticalRight:  '‚óä',
	},
}

// GetBorderStyle returns the border characters for a given style name
func GetBorderStyle(styleName string) BorderChars {
	if style, ok := BorderStyles[styleName]; ok {
		return style
	}
	// Default to single style
	return BorderStyles["Single"]
}

// BorderStyleNames returns all available border style names
func BorderStyleNames() []string {
	names := make([]string, 0, len(BorderStyles))
	for name := range BorderStyles {
		names = append(names, name)
	}
	// Sort for consistent ordering
	sort.Strings(names)
	return names
}